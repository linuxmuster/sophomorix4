Create a personal test package for linuxmuster 7.x/bionic:
=======================================================
1. make deb
2. dpkg -i /path/to/deb


Create an official package for linuxmuster 7.x/bionic:
=======================================================

1. # checkout the branch 'bionic'
   git checkout bionic


2. git status
   # If there is rubbish: clean last build
   git reset --hard HEAD
   git clean -f -d 


3. # update versions in debian/control
   # i.e. replace 3.15.2 with 3.15.3


4. # update changelog file:
   cd sophomorix4
   dch -i 
     -> set version number (example: 3.15.3-1)
     -> add a comment to the changelog
     -> set a repo like bionic OR lmn7-testing OR ...
        (this determines, in which repo the package will be uploaded)


5. # Commit changes (use the jeffbeck ssh-key):
   cd sophomorix4
   git commit -m "prepared new package 3.15.3-1"
   git push


6. # create the package
   make deb


7. # If the package was successfully created:
   # Tag the stuff with annotated, unsigned tag
   git tag V-3.15.3-1
   # push the tag to the github server
   git push --tags


8. # upload the packages to linuxmuster.net
   dput -f -c ./dput.cf linuxmuster.net sophomorix4_3.15.3-1.changes

   # With dput.cf
   [linuxmuster.net]
   fqdn = linuxmuster.net
   method = scp
   ssh_config_options = IdentityFile ~/.ssh/>>keyfile<<
   login = >>username<<
   incoming = ~/incoming
   post_upload_command = ssh -i ~/.ssh/>>keyfile<< >>username<<@linuxmuster.net mini-dinstall -b
   allow_unsigned_uploads = true


Build Process on github:
=======================================================

0. configuration file is:
   .github/workflows/release.yml

1. The build process inludes only files that are committed to the repository on github
   --> commit all changes and push them to gizhub

2. update versions in debian/control
   i.e. replace 3.15.2 with 3.15.3

3. update changelog file:
   # cd sophomorix4
   # dch -i 
     -> set version number (example: 3.15.3-1)
     -> add a comment to the changelog
        * use multilines here
     -> set a valid repo like lmn7 OR ...
        see configuration file .github/workflows/release.yml